---
layout: "post"
title: "php学习"
date: "2019-01-12 17:57"
---



![QQ截图20190113191638](/assets/QQ截图20190113191638.png)
```
  < ? php
 $a=<<<str
 123456
str;  // 前面没有空格
echo("$a");
 echo<<<std
 fkldjs $a
  $a
std    // 前面没有空格
?>
```
---
### 1. < p > < /p>换行
---
### 2.  进制 八进制0开头 十六0x
---
```
注意 如 八进制中的038333 结果为3
echo  ".pi()."  结果为3.1415926535898
```
---
###3.数组的定义方法
```
$arr[4]='1';

$b=array("key1"=>9999,"data1"=>"你好");

$a=array(7,8,9,10,6,"ni" ,"hao");


echo "$arr[4] $a[1] $a[2] $b[key1]  $b[data1] <p>";
echo "$a[5]";
```
输出结果为
```
1 8 9 9999 你好
ni

```
---
### 4.unset（$string） 释放  is_null()判断空指针类型
![QQ截图20190113112400](/assets/QQ截图20190113112400.png)

---

### 5.定义
![QQ截图20190113112520](/assets/QQ截图20190113112520.png)
![QQ截图20190113112644](/assets/QQ截图20190113112644.png)

---
### 6.数据类型
* ①整形 浮点型 字符 布尔型（判断真假 0 or 1） 对象object

* ②同样存在强制类型转换
![QQ截图20190113114229](/assets/QQ截图20190113114229.png)

* ③转化为数组时 转化成第一个元素![QQ截图20190113114848](/assets/QQ截图20190113114848.png)

* ④函数转换 如 settype（$string,'int') 转化成功返回1；

* ⑤数据类型检测 is_int() is_string() 其他类似
![QQ截图20190113115520](/assets/QQ截图20190113115520.png)

---
### 7.php常量
* ① 组成 ![QQ截图20190113115720](/assets/QQ截图20190113115720.png)

* ② 使用方法
![QQ图片20190113120017](/assets/QQ图片20190113120017.png)

输出  注意两点
![QQ截图20190113124200](/assets/QQ截图20190113124200.png)


---
### 8.php变量
* ①作用域 ----------  静态变量 static
![QQ截图20190113124556](/assets/QQ截图20190113124556.png)

* ②自己编写的函数里不能直接调用全局变量 在函数内调用前加global进行声明
![QQ截图20190113175443](/assets/QQ截图20190113175443.png)

* ③可变变量
![QQ截图20190113175834](/assets/QQ截图20190113175834.png)

* ④PHP预定义变量
![QQ截图20190113180030](/assets/QQ截图20190113180030.png)

---
### 9.php运算符
例子  注意输出格式
![QQ截图20190113181813](/assets/QQ截图20190113181813.png)
* ①字符串的连接：串a与串b链接 $a.$b 用  **“.”**


* ②逻辑运算符
![QQ图片20190113184949](/assets/QQ图片20190113184949.png)



* ③比较运算符  恒等及数值及类型都相等  不恒等 既不..也不...
![QQ截图20190113185054](/assets/QQ截图20190113185054.png)


* ④函数的定义  （基本与C语言相似  **传参的时候参数列表同样可以用&  但传参时不用加&** ）
![QQ截图20190113191456](/assets/QQ截图20190113191456.png)


 注意  **但是return可以返回一个数或一个表达式**



 ---
![QQ截图20190113193148](/assets/QQ截图20190113193148.png)

---

例题
![QQ截图20190113195320](/assets/QQ截图20190113195320.png)

![QQ截图20190113195415](/assets/QQ截图20190113195415.png)

---
* **⑤变量函数**

相当于给一个变量赋值为函数名称。
![QQ截图20190113201750](/assets/QQ截图20190113201750.png)

* ⑥函数的引用 列子
![QQ截图20190114180202](/assets/QQ截图20190114180202_jmxjojq26.png)
* ⑦取消引用  同样只有例子
![QQ截图20190114181854](/assets/QQ截图20190114181854.png)

---

### 10. php规范（废话不多说）

![QQ截图20190114184359](/assets/QQ截图20190114184359.png)
![QQ截图20190114184501](/assets/QQ截图20190114184501.png)
![QQ截图20190114184541](/assets/QQ截图20190114184541.png)
![QQ截图20190114184632](/assets/QQ截图20190114184632.png)
![QQ截图20190114184650](/assets/QQ截图20190114184650.png)
